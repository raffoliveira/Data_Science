{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"QuarentenaDados - aula01","provenance":[{"file_id":"1p69W-kfloWqslpLqwmaOV2GTsqaeWyi0","timestamp":1588195391396},{"file_id":"1xp2So-bE3UwySetbgespXRFGLbP4A4yv","timestamp":1586895508025}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"sG6vp0eCNdi2","colab_type":"text"},"source":["#Aula 01 "]},{"cell_type":"markdown","metadata":{"id":"f7ibSyNTXtv9","colab_type":"text"},"source":["## Introdução\n","\n","Olá seja bem-vinda ou bem-vindo ao **notebook da aula01**, nesta aula vamos realizar nossa primeira análise de dados e no final já seremos capazes de tirar algumas conclusões.\n","\n","Nós estaremos desenvolvendo nosso projeto aqui no google colaboratory, assim podemos mesclar células contendo textos em formato markdown e células de código, além disso você não precisar instalar nada na sua máquina. Então que tal começar testando algumas linhas de código.\n","\n","Nesta primeira célula estamos realizando um ```print()```, lembre-se que esta função python imprime a string que estamos passando como parâmetro, então  o retorno é exibido logo abaixo da célula com código."]},{"cell_type":"code","metadata":{"id":"vC0a5z7IRFWT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597221779,"user_tz":180,"elapsed":5926,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"48f0a757-7e94-47ec-bdad-85b1122043d8"},"source":["print(\"Rafael Francisco\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Rafael Francisco\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"R2uQtgGLlaDs","colab_type":"text"},"source":["Agora vamos analisar a proxima célula de código. \n","\n","Aqui estamos fazendo uma atribuição de variável, conforme dito em aula, as atribuições não tem retorno, assim, diferente da célula anterior não temos um *output* logo abaixo do código."]},{"cell_type":"code","metadata":{"id":"i9-JUfxERKcN","colab_type":"code","colab":{}},"source":["nome_do_filme = \"Totoro, o filme\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gQi3djrZmwZ8","colab_type":"text"},"source":["Agora que criamos a variável ```nome_do_filme```, podemos reutilizá-la, por exemplo na função ```print```, para assim imprimir a *string* \"Totoro, o filme\"."]},{"cell_type":"code","metadata":{"id":"3aFMfB0ERUcF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597222230,"user_tz":180,"elapsed":6035,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"4f52439b-a8da-40a9-d615-694ff426e047"},"source":["print(nome_do_filme)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Totoro, o filme\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Sg2NRrX9RXM-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597222243,"user_tz":180,"elapsed":5858,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"51b2c26d-76d5-4ed7-d9e0-7353a8c067c8"},"source":["nome_do_filme"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Totoro, o filme'"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"OuYA1aSIX0vJ","colab_type":"text"},"source":["## Lendo os dados do MovieLens\n","\n","Nosso primeiro passo foi conhecer e realizar um \"hello-world\" no colab, agora chegou a hora de importar os dados para o notebook e começar as análises.\n","\n","Vamos importar a biblioteca [pandas](https://pandas.pydata.org/), um poderoso projeto open source para análise de manipulação de dados. O primeiro passo é ler uma base de dados e podemos fazer isso com o comando ```pd.read_csv()```.\n","\n","Estamos lendo um arquivo **CSV** (Comma-separated values), neste tipo de arquivo os valores são separados por vírgulas e podem ser abertos em outras ferramentas como excel e google-sheet. CSV não é o único formato lido pelo pandas, temos o ```pd.read_excel()``` que lê arquivos **xlsx** entre diversos outros formatos, você pode encontrar mais informações na seção de [input/output da documentação](https://pandas.pydata.org/pandas-docs/stable/reference/io.html).\n","\n","Depois de ler o dataset, nós trocamos os nomes das colunas pelos termos em português, logo em seguida utilizamos o método ```filmes.head()``` para visualizar as primeiras 5 linhas do nosso dataframe. Outra forma de visualizar as informações dos dados é utilizando o método ```filmes.sample()```, se você tentar, vai verificar que ele retorna uma linha aleatória do seus dados. Para escolher aleatoriamente mais de 1 linha, por exemplo 5, é só passar esse valor desejado como parâmetro (```filmes.sample(5)```). "]},{"cell_type":"code","metadata":{"id":"fm9UvpjdRZjP","colab_type":"code","colab":{}},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uIoEtYpDUSbk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597222956,"user_tz":180,"elapsed":6214,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"c27a9c33-71e1-4680-c7b9-352fbd034bcb"},"source":["movies = pd.read_csv(\"drive/My Drive/Colab Notebooks/database_small/movies.csv\")\n","# movies é um DataFrame\n","movies.columns = [\"MovieId\", \"Title\", \"Genres\"]\n","movies.head()\n","len(movies)\n","# movies.sample(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9742"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"bZ46r5yAYCDO","colab_type":"text"},"source":["Há pouco falamos para consultar a documentação para obter mais informações, mas será que é realmente preciso sair do notebook para tirar algumas dúvidas mais simples? \n","\n","Os notebooks facilitam a nossa vida podendo consultar o docstring das funções e métodos, rodando a célula com um **?** na frente da chamada, uma view é aberta com as informações resumidas. Veja a seguir alguns exemplos."]},{"cell_type":"code","metadata":{"id":"1PLWlLIgiIWe","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":55},"executionInfo":{"status":"ok","timestamp":1588597222958,"user_tz":180,"elapsed":6051,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"8fd11cfe-467c-406e-ed06-9f2d7ac5dff3"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sKew1Wy0UYbu","colab_type":"code","colab":{}},"source":["# lendo a documentação de um método/atributo\n","\n","?movies.head"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"i6F4_qpeUzOq","colab_type":"code","colab":{}},"source":["# lendo a documentação do tipo (docstring)\n","\n","?movies"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wwcenqbGYGAO","colab_type":"text"},"source":["A base de dados que usamos até o momento contém o nome do filme, ano de lançamento e gêneros. O MovieLens conta com outras informações que estão em bases separadas, uma delas é a de avaliações. \n","\n","Agora vamos analisar um pouco melhor o dataset de avaliações."]},{"cell_type":"code","metadata":{"id":"7A1UmccVVLeK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1588597229295,"user_tz":180,"elapsed":12068,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"477161f7-0695-47fb-a2e9-51d1c934b7c0"},"source":["ratings = pd.read_csv(\"drive/My Drive/Colab Notebooks/database_small/ratings.csv\")\n","ratings.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>964981247</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4.0</td>\n","      <td>964982224</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>5.0</td>\n","      <td>964983815</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>5.0</td>\n","      <td>964982931</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   userId  movieId  rating  timestamp\n","0       1        1     4.0  964982703\n","1       1        3     4.0  964981247\n","2       1        6     4.0  964982224\n","3       1       47     5.0  964983815\n","4       1       50     5.0  964982931"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"otNlLBcYE1gP","colab_type":"text"},"source":["Para visualizar algumas linhas estamos usando o ```.head()```, como ela mostra apenas as 5 primeiras linhas não sabemos qual é a quantidade de linhas que temos. Para descobrir a \"forma\" dos nossos dados podemos utilizar o ```avaliacoes.shape```, retornando uma [tupla](https://www.alura.com.br/artigos/conhecendo-as-tuplas-no-python), onde o primeiro termo indica o número de linhas e o segundo o número de colunas."]},{"cell_type":"code","metadata":{"id":"QRXxNO5-VyJD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597229301,"user_tz":180,"elapsed":11986,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"908fab51-8d0f-42cc-a9ce-3456f6707d86"},"source":["ratings.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100836, 4)"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"Wo5ZCjYdV6To","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597229304,"user_tz":180,"elapsed":11941,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"480ecdad-4c89-4aca-dcc6-68d426805adc"},"source":["len(ratings)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100836"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"5E9e-dkuGUaK","colab_type":"text"},"source":["Vamos substituir os nomes das colunas de inglês para português e entender o que são essas colunas. \n","\n","usarioId => ID para para usuário que votou em determinado filme.\n","\n","filmeId => ID para identificar um filme votado.\n","\n","nota => A nota dada para pelo usuário para o respectivo filme.\n","\n","momento => A data da votação que não está formatada como data\n","\n","Como cada linha contém um voto para o respectivo filme é de se esperar que um filme tenha diversos votos, mas repare que nas 5 primeiras linhas temos o filme **1, 3, 6, 47, 50**. Mas e se eu quiser analisar apenas as notas do filme 1, como posso separar essa informação?\n","\n"]},{"cell_type":"code","metadata":{"id":"QblDDv4SWBvC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1588597229307,"user_tz":180,"elapsed":11900,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"bf521a91-d4d9-48a6-b38f-018c6cb4d17f"},"source":["ratings.columns = [\"UserId\", \"MovieId\", \"Rating\", \"Date\"]\n","ratings.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>MovieId</th>\n","      <th>Rating</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>964981247</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4.0</td>\n","      <td>964982224</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>5.0</td>\n","      <td>964983815</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>50</td>\n","      <td>5.0</td>\n","      <td>964982931</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   UserId  MovieId  Rating       Date\n","0       1        1     4.0  964982703\n","1       1        3     4.0  964981247\n","2       1        6     4.0  964982224\n","3       1       47     5.0  964983815\n","4       1       50     5.0  964982931"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"W7qCWhXVICxr","colab_type":"text"},"source":["Uma forma para \"separar\" as informações apenas do **filmeId 1** é chamando o método ```avaliacaoes.query(\"filmeId==1\")```, esse método retornará apenas as linhas para quais a expressão booleana, \"filmeId==1\", for verdadeira.\n","\n","Tendo as informações do **filmeId 1** podemos chamar o ```avaliacoes_do_filme_1.describe()```, para analisar as estatítiscas gerais dos dados."]},{"cell_type":"code","metadata":{"id":"t26TcAKMWLx8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1588600461049,"user_tz":180,"elapsed":1491,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"6c8eeebe-ad2a-48a1-a6bc-78feeb81c4c1"},"source":["ratings_movie1 = ratings.query(\"MovieId==1\")\n","ratings_movie1.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>MovieId</th>\n","      <th>Rating</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","    </tr>\n","    <tr>\n","      <th>516</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>847434962</td>\n","    </tr>\n","    <tr>\n","      <th>874</th>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","      <td>1106635946</td>\n","    </tr>\n","    <tr>\n","      <th>1434</th>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>2.5</td>\n","      <td>1510577970</td>\n","    </tr>\n","    <tr>\n","      <th>1667</th>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>4.5</td>\n","      <td>1305696483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      UserId  MovieId  Rating        Date\n","0          1        1     4.0   964982703\n","516        5        1     4.0   847434962\n","874        7        1     4.5  1106635946\n","1434      15        1     2.5  1510577970\n","1667      17        1     4.5  1305696483"]},"metadata":{"tags":[]},"execution_count":86}]},{"cell_type":"code","metadata":{"id":"se3soadiWuG_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1588597229314,"user_tz":180,"elapsed":11522,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"b28df2ab-c91a-43a5-d668-173b226dc753"},"source":["#describe prove algumas estatisticas\n","ratings_movie1.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>MovieId</th>\n","      <th>Rating</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>215.000000</td>\n","      <td>215.0</td>\n","      <td>215.000000</td>\n","      <td>2.150000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>306.530233</td>\n","      <td>1.0</td>\n","      <td>3.920930</td>\n","      <td>1.129835e+09</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>180.419754</td>\n","      <td>0.0</td>\n","      <td>0.834859</td>\n","      <td>2.393163e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.500000</td>\n","      <td>8.293223e+08</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>155.500000</td>\n","      <td>1.0</td>\n","      <td>3.500000</td>\n","      <td>8.779224e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>290.000000</td>\n","      <td>1.0</td>\n","      <td>4.000000</td>\n","      <td>1.106855e+09</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>468.500000</td>\n","      <td>1.0</td>\n","      <td>4.500000</td>\n","      <td>1.348523e+09</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>610.000000</td>\n","      <td>1.0</td>\n","      <td>5.000000</td>\n","      <td>1.535710e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           UserId  MovieId      Rating          Date\n","count  215.000000    215.0  215.000000  2.150000e+02\n","mean   306.530233      1.0    3.920930  1.129835e+09\n","std    180.419754      0.0    0.834859  2.393163e+08\n","min      1.000000      1.0    0.500000  8.293223e+08\n","25%    155.500000      1.0    3.500000  8.779224e+08\n","50%    290.000000      1.0    4.000000  1.106855e+09\n","75%    468.500000      1.0    4.500000  1.348523e+09\n","max    610.000000      1.0    5.000000  1.535710e+09"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"zUD1xulBKcou","colab_type":"text"},"source":["Caso queira uma estatística particular, podemos apenas chamar o método desajado, repare abaixo como calculamos apenas a média das avaliações do **filmeId 1**."]},{"cell_type":"code","metadata":{"id":"lf4dH46SW2ro","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1588597229316,"user_tz":180,"elapsed":11367,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"b5fc6290-7684-4b87-ffae-e693ffd0c0b5"},"source":["ratings_movie1.mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["UserId     3.065302e+02\n","MovieId    1.000000e+00\n","Rating     3.920930e+00\n","Date       1.129835e+09\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"dylF75HzK_nI","colab_type":"text"},"source":["Calculamos as estatísicas apenas para o **filmeId 1**, mas também podemos chamar o método ```.describe()``` para a base completa (avaliacões)."]},{"cell_type":"code","metadata":{"id":"jZ9ZtovSWS0C","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1588597229335,"user_tz":180,"elapsed":11242,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"5648fe5a-3185-4649-86cd-132f11554950"},"source":["ratings.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>MovieId</th>\n","      <th>Rating</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100836.000000</td>\n","      <td>100836.000000</td>\n","      <td>100836.000000</td>\n","      <td>1.008360e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>326.127564</td>\n","      <td>19435.295718</td>\n","      <td>3.501557</td>\n","      <td>1.205946e+09</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>182.618491</td>\n","      <td>35530.987199</td>\n","      <td>1.042529</td>\n","      <td>2.162610e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>8.281246e+08</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>177.000000</td>\n","      <td>1199.000000</td>\n","      <td>3.000000</td>\n","      <td>1.019124e+09</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>325.000000</td>\n","      <td>2991.000000</td>\n","      <td>3.500000</td>\n","      <td>1.186087e+09</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>477.000000</td>\n","      <td>8122.000000</td>\n","      <td>4.000000</td>\n","      <td>1.435994e+09</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>610.000000</td>\n","      <td>193609.000000</td>\n","      <td>5.000000</td>\n","      <td>1.537799e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              UserId        MovieId         Rating          Date\n","count  100836.000000  100836.000000  100836.000000  1.008360e+05\n","mean      326.127564   19435.295718       3.501557  1.205946e+09\n","std       182.618491   35530.987199       1.042529  2.162610e+08\n","min         1.000000       1.000000       0.500000  8.281246e+08\n","25%       177.000000    1199.000000       3.000000  1.019124e+09\n","50%       325.000000    2991.000000       3.500000  1.186087e+09\n","75%       477.000000    8122.000000       4.000000  1.435994e+09\n","max       610.000000  193609.000000       5.000000  1.537799e+09"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"markdown","metadata":{"id":"4Kq3eGVXLmca","colab_type":"text"},"source":["Ok, nós calculamos um tanto de coisa usando `.describe()` e `.mean()`, mas a informação que realmente queremos é a média da nota. Então o ponto é, como calcular a média apenas das notas?\n","\n","A primeira coisa que precisamos fazer é selecionar apenas as informações de notas. Usando uma estrutura muito parecida com a de [chave-valor dos dicionários python](https://www.alura.com.br/artigos/trabalhando-com-o-dicionario-no-python). \n","\n","Com o comando ```avaliacoes[\"nota\"]```, obtemos os valores da coluna nota (repare que o tipo retornado é uma Série pandas, por isso o index de cada nota é mantido). Para calcular a média de todas as notas executamos ```avaliacoes[\"notas\"].means()```\n"]},{"cell_type":"code","metadata":{"id":"OnltfnYqWi40","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":233},"executionInfo":{"status":"ok","timestamp":1588597229342,"user_tz":180,"elapsed":11109,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"53fe9bcc-5ed8-4d6e-bef4-0903d659addf"},"source":["ratings[\"Rating\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         4.0\n","1         4.0\n","2         4.0\n","3         5.0\n","4         5.0\n","         ... \n","100831    4.0\n","100832    5.0\n","100833    5.0\n","100834    5.0\n","100835    3.0\n","Name: Rating, Length: 100836, dtype: float64"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"Xos6cYlmPWO6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597229351,"user_tz":180,"elapsed":10988,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"f7c3b467-97d9-4c11-bfe6-67032ea99930"},"source":["ratings[\"Rating\"].mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.501556983616962"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"u03bvyYZPvza","colab_type":"text"},"source":["Podemos calcular também na nota média do **filmeId 1**, repare que o resultado é um pouco maior que a geral. Apenas com essa análise não da para bater o martelo que o filme 1 é acima da média, mas apenas com essa análise conseguimos formular uma primeira hipótese!"]},{"cell_type":"code","metadata":{"id":"h8JDwB_2W8yR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1588597229358,"user_tz":180,"elapsed":10915,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"2792261e-cb01-473a-c28d-f144ea66ce09"},"source":["ratings_movie1[\"Rating\"].mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.9209302325581397"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"Wv6npVXeRuVl","colab_type":"text"},"source":["Nós calculamos uma média geral, uma média para o filmeId 1. Agora eu quero calcular a média das notas para todos os filmes, podemos fazer isso usando o método ```.groupby(filmeId)```, o parâmetro passado é para indicar qual coluna ele deve utilizar para \"agrupar\" os dados. Depois só calcular a média como fizemos anteriormente.\n","\n"]},{"cell_type":"code","metadata":{"id":"78qsVDbWW-kf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1588597229361,"user_tz":180,"elapsed":10821,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"8578308a-60a6-46d7-c042-0f3c803b66e4"},"source":["rating_mean_movie = ratings.groupby(\"MovieId\")[\"Rating\"].mean()\n","rating_mean_movie.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MovieId\n","1    3.920930\n","2    3.431818\n","3    3.259615\n","4    2.357143\n","5    3.071429\n","Name: Rating, dtype: float64"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"gRyxEdyOWs4I","colab_type":"text"},"source":["Temos as notas médias calculadas, mas agora precisamos juntar as informações de notas médias com a base de dados **filmes**.\n","\n","Poderíamos criar uma nova coluna e atribuir a váriável `notas_medias_por_filme`, de forma direta:\n","\n","```filmes[\"nota_media\"] = notas_medias_por_filme```\n","\n","Como discutimos em aula, essa não é uma boa prática pois precisamos garantir que a nota média seja do respectivo filme.\n","\n","Para garantir essa condição vamos utilizar o ```.join()```, criando um novo dataframe (```filmes_com_media = filmes.join(notas_medias_por_filme, on=\"filmeId\")```). \n","\n","Veja como fazer, nas células a seguir."]},{"cell_type":"code","metadata":{"id":"jPTL419OYjto","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1588597229381,"user_tz":180,"elapsed":10752,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"a81f6aea-f1e8-4559-f753-1e515f04dd1e"},"source":["movies\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9737</th>\n","      <td>193581</td>\n","      <td>Black Butler: Book of the Atlantic (2017)</td>\n","      <td>Action|Animation|Comedy|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>9738</th>\n","      <td>193583</td>\n","      <td>No Game No Life: Zero (2017)</td>\n","      <td>Animation|Comedy|Fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>9739</th>\n","      <td>193585</td>\n","      <td>Flint (2017)</td>\n","      <td>Drama</td>\n","    </tr>\n","    <tr>\n","      <th>9740</th>\n","      <td>193587</td>\n","      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n","      <td>Action|Animation</td>\n","    </tr>\n","    <tr>\n","      <th>9741</th>\n","      <td>193609</td>\n","      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n","      <td>Comedy</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9742 rows × 3 columns</p>\n","</div>"],"text/plain":["      MovieId  ...                                       Genres\n","0           1  ...  Adventure|Animation|Children|Comedy|Fantasy\n","1           2  ...                   Adventure|Children|Fantasy\n","2           3  ...                               Comedy|Romance\n","3           4  ...                         Comedy|Drama|Romance\n","4           5  ...                                       Comedy\n","...       ...  ...                                          ...\n","9737   193581  ...              Action|Animation|Comedy|Fantasy\n","9738   193583  ...                     Animation|Comedy|Fantasy\n","9739   193585  ...                                        Drama\n","9740   193587  ...                             Action|Animation\n","9741   193609  ...                                       Comedy\n","\n","[9742 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"AVlwJvZRZCQP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":251},"executionInfo":{"status":"ok","timestamp":1588597229383,"user_tz":180,"elapsed":10265,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"fad046aa-95e3-48f0-e3d9-ced1d6ce2dd0"},"source":["rating_mean_movie\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MovieId\n","1         3.920930\n","2         3.431818\n","3         3.259615\n","4         2.357143\n","5         3.071429\n","            ...   \n","193581    4.000000\n","193583    3.500000\n","193585    3.500000\n","193587    3.500000\n","193609    4.000000\n","Name: Rating, Length: 9724, dtype: float64"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"f6PNRHyx3HMk","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hoUllrZFZgsA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1588607283633,"user_tz":180,"elapsed":1728,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"3d9c0ec6-634c-4660-a71a-3ed5d800d5ef"},"source":["movies_mean = movies.join(rating_mean_movie, on=\"MovieId\")\n","movies_mean"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>3.920930</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","      <td>3.431818</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","      <td>3.259615</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>2.357143</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","      <td>3.071429</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9737</th>\n","      <td>193581</td>\n","      <td>Black Butler: Book of the Atlantic (2017)</td>\n","      <td>Action|Animation|Comedy|Fantasy</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9738</th>\n","      <td>193583</td>\n","      <td>No Game No Life: Zero (2017)</td>\n","      <td>Animation|Comedy|Fantasy</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9739</th>\n","      <td>193585</td>\n","      <td>Flint (2017)</td>\n","      <td>Drama</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9740</th>\n","      <td>193587</td>\n","      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n","      <td>Action|Animation</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9741</th>\n","      <td>193609</td>\n","      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n","      <td>Comedy</td>\n","      <td>4.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9742 rows × 4 columns</p>\n","</div>"],"text/plain":["      MovieId  ...    Rating\n","0           1  ...  3.920930\n","1           2  ...  3.431818\n","2           3  ...  3.259615\n","3           4  ...  2.357143\n","4           5  ...  3.071429\n","...       ...  ...       ...\n","9737   193581  ...  4.000000\n","9738   193583  ...  3.500000\n","9739   193585  ...  3.500000\n","9740   193587  ...  3.500000\n","9741   193609  ...  4.000000\n","\n","[9742 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":168}]},{"cell_type":"markdown","metadata":{"id":"i1YF99HCHMac","colab_type":"text"},"source":["# **DESAFIO 1**\n","\n"]},{"cell_type":"code","metadata":{"id":"I7DtNa2M3HSj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1588607353694,"user_tz":180,"elapsed":1691,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"bdffec53-27cf-4f0a-ebb2-5b308a448016"},"source":["movies_without_rating = pd.merge(movies, rating_mean_movie, on='MovieId', how='left', indicator=True).query(\"_merge == 'left_only'\").drop('_merge',1)\n","movies_without_rating\n","# print(len(movies_without_rating))\n","# select = movies_mean['Rating'].isnull()\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>816</th>\n","      <td>1076</td>\n","      <td>Innocents, The (1961)</td>\n","      <td>Drama|Horror|Thriller</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2211</th>\n","      <td>2939</td>\n","      <td>Niagara (1953)</td>\n","      <td>Drama|Thriller</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2499</th>\n","      <td>3338</td>\n","      <td>For All Mankind (1989)</td>\n","      <td>Documentary</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2587</th>\n","      <td>3456</td>\n","      <td>Color of Paradise, The (Rang-e khoda) (1999)</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3118</th>\n","      <td>4194</td>\n","      <td>I Know Where I'm Going! (1945)</td>\n","      <td>Drama|Romance|War</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4037</th>\n","      <td>5721</td>\n","      <td>Chosen, The (1981)</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4506</th>\n","      <td>6668</td>\n","      <td>Road Home, The (Wo de fu qin mu qin) (1999)</td>\n","      <td>Drama|Romance</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4598</th>\n","      <td>6849</td>\n","      <td>Scrooge (1970)</td>\n","      <td>Drama|Fantasy|Musical</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4704</th>\n","      <td>7020</td>\n","      <td>Proof (1991)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5020</th>\n","      <td>7792</td>\n","      <td>Parallax View, The (1974)</td>\n","      <td>Thriller</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5293</th>\n","      <td>8765</td>\n","      <td>This Gun for Hire (1942)</td>\n","      <td>Crime|Film-Noir|Thriller</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5421</th>\n","      <td>25855</td>\n","      <td>Roaring Twenties, The (1939)</td>\n","      <td>Crime|Drama|Thriller</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5452</th>\n","      <td>26085</td>\n","      <td>Mutiny on the Bounty (1962)</td>\n","      <td>Adventure|Drama|Romance</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5749</th>\n","      <td>30892</td>\n","      <td>In the Realms of the Unreal (2004)</td>\n","      <td>Animation|Documentary</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5824</th>\n","      <td>32160</td>\n","      <td>Twentieth Century (1934)</td>\n","      <td>Comedy</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5837</th>\n","      <td>32371</td>\n","      <td>Call Northside 777 (1948)</td>\n","      <td>Crime|Drama|Film-Noir</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5957</th>\n","      <td>34482</td>\n","      <td>Browning Version, The (1951)</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7565</th>\n","      <td>85565</td>\n","      <td>Chalet Girl (2011)</td>\n","      <td>Comedy|Romance</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MovieId  ... Rating\n","816      1076  ...    NaN\n","2211     2939  ...    NaN\n","2499     3338  ...    NaN\n","2587     3456  ...    NaN\n","3118     4194  ...    NaN\n","4037     5721  ...    NaN\n","4506     6668  ...    NaN\n","4598     6849  ...    NaN\n","4704     7020  ...    NaN\n","5020     7792  ...    NaN\n","5293     8765  ...    NaN\n","5421    25855  ...    NaN\n","5452    26085  ...    NaN\n","5749    30892  ...    NaN\n","5824    32160  ...    NaN\n","5837    32371  ...    NaN\n","5957    34482  ...    NaN\n","7565    85565  ...    NaN\n","\n","[18 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":170}]},{"cell_type":"markdown","metadata":{"id":"-4YTMy0F8yfg","colab_type":"text"},"source":["# **DESAFIO 2**"]},{"cell_type":"code","metadata":{"id":"EcLPATkN5BBf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1588607449542,"user_tz":180,"elapsed":1627,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"cd003511-7580-4c46-db05-3710df4da47e"},"source":["# movies_mean.columns = ['MovieId', 'Title', 'Genres', 'RatingMean']\n","movies_mean = movies_mean.rename(columns={'Rating': 'RatingMean'})\n","movies_mean\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>RatingMean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>3.920930</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","      <td>3.431818</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","      <td>3.259615</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>2.357143</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","      <td>3.071429</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9737</th>\n","      <td>193581</td>\n","      <td>Black Butler: Book of the Atlantic (2017)</td>\n","      <td>Action|Animation|Comedy|Fantasy</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9738</th>\n","      <td>193583</td>\n","      <td>No Game No Life: Zero (2017)</td>\n","      <td>Animation|Comedy|Fantasy</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9739</th>\n","      <td>193585</td>\n","      <td>Flint (2017)</td>\n","      <td>Drama</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9740</th>\n","      <td>193587</td>\n","      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n","      <td>Action|Animation</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>9741</th>\n","      <td>193609</td>\n","      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n","      <td>Comedy</td>\n","      <td>4.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9742 rows × 4 columns</p>\n","</div>"],"text/plain":["      MovieId  ... RatingMean\n","0           1  ...   3.920930\n","1           2  ...   3.431818\n","2           3  ...   3.259615\n","3           4  ...   2.357143\n","4           5  ...   3.071429\n","...       ...  ...        ...\n","9737   193581  ...   4.000000\n","9738   193583  ...   3.500000\n","9739   193585  ...   3.500000\n","9740   193587  ...   3.500000\n","9741   193609  ...   4.000000\n","\n","[9742 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":172}]},{"cell_type":"markdown","metadata":{"id":"mUbgs_Ra9G8p","colab_type":"text"},"source":["# **DESAFIO 3**"]},{"cell_type":"code","metadata":{"id":"VNK50qsa9AHV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1588601063381,"user_tz":180,"elapsed":5471,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"198648b7-a3e4-4877-cfba-4dfb770bb8ad"},"source":["rating_count_movie = ratings.groupby('MovieId')['Rating'].count()\n","movie_count = movies_mean.join(rating_count_movie, on = 'MovieId')\n","movie_count.columns = ['MovieId', 'Title', 'Genres', 'RatingMean', 'RatingCount']\n","movie_count\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>RatingMean</th>\n","      <th>RatingCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>3.920930</td>\n","      <td>215.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","      <td>3.431818</td>\n","      <td>110.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","      <td>3.259615</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>2.357143</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","      <td>3.071429</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9737</th>\n","      <td>193581</td>\n","      <td>Black Butler: Book of the Atlantic (2017)</td>\n","      <td>Action|Animation|Comedy|Fantasy</td>\n","      <td>4.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9738</th>\n","      <td>193583</td>\n","      <td>No Game No Life: Zero (2017)</td>\n","      <td>Animation|Comedy|Fantasy</td>\n","      <td>3.500000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9739</th>\n","      <td>193585</td>\n","      <td>Flint (2017)</td>\n","      <td>Drama</td>\n","      <td>3.500000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9740</th>\n","      <td>193587</td>\n","      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n","      <td>Action|Animation</td>\n","      <td>3.500000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9741</th>\n","      <td>193609</td>\n","      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n","      <td>Comedy</td>\n","      <td>4.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9742 rows × 5 columns</p>\n","</div>"],"text/plain":["      MovieId  ... RatingCount\n","0           1  ...       215.0\n","1           2  ...       110.0\n","2           3  ...        52.0\n","3           4  ...         7.0\n","4           5  ...        49.0\n","...       ...  ...         ...\n","9737   193581  ...         1.0\n","9738   193583  ...         1.0\n","9739   193585  ...         1.0\n","9740   193587  ...         1.0\n","9741   193609  ...         1.0\n","\n","[9742 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"markdown","metadata":{"id":"r7P1xsVvAlHn","colab_type":"text"},"source":["# **DESAFIO 4**"]},{"cell_type":"code","metadata":{"id":"ALnBx1q7ArNb","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1588601622878,"user_tz":180,"elapsed":1502,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"f99cda09-46d6-4931-89b8-2145dfbf4c62"},"source":["movie_count.round(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>RatingMean</th>\n","      <th>RatingCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>3.92</td>\n","      <td>215.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Jumanji (1995)</td>\n","      <td>Adventure|Children|Fantasy</td>\n","      <td>3.43</td>\n","      <td>110.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Grumpier Old Men (1995)</td>\n","      <td>Comedy|Romance</td>\n","      <td>3.26</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Waiting to Exhale (1995)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>2.36</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Father of the Bride Part II (1995)</td>\n","      <td>Comedy</td>\n","      <td>3.07</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9737</th>\n","      <td>193581</td>\n","      <td>Black Butler: Book of the Atlantic (2017)</td>\n","      <td>Action|Animation|Comedy|Fantasy</td>\n","      <td>4.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9738</th>\n","      <td>193583</td>\n","      <td>No Game No Life: Zero (2017)</td>\n","      <td>Animation|Comedy|Fantasy</td>\n","      <td>3.50</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9739</th>\n","      <td>193585</td>\n","      <td>Flint (2017)</td>\n","      <td>Drama</td>\n","      <td>3.50</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9740</th>\n","      <td>193587</td>\n","      <td>Bungo Stray Dogs: Dead Apple (2018)</td>\n","      <td>Action|Animation</td>\n","      <td>3.50</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9741</th>\n","      <td>193609</td>\n","      <td>Andrew Dice Clay: Dice Rules (1991)</td>\n","      <td>Comedy</td>\n","      <td>4.00</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9742 rows × 5 columns</p>\n","</div>"],"text/plain":["      MovieId  ... RatingCount\n","0           1  ...       215.0\n","1           2  ...       110.0\n","2           3  ...        52.0\n","3           4  ...         7.0\n","4           5  ...        49.0\n","...       ...  ...         ...\n","9737   193581  ...         1.0\n","9738   193583  ...         1.0\n","9739   193585  ...         1.0\n","9740   193587  ...         1.0\n","9741   193609  ...         1.0\n","\n","[9742 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"markdown","metadata":{"id":"FXfvGGgRCcS6","colab_type":"text"},"source":["# **DESAFIO 5**"]},{"cell_type":"code","metadata":{"id":"s-7UXq-kJbBV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":377},"executionInfo":{"status":"ok","timestamp":1588607685623,"user_tz":180,"elapsed":1039,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"82e8a3aa-6810-4d94-c18d-a0ae767c0828"},"source":["array_movie_genres = movie_count['Genres'].to_numpy()\n","genres = []\n","for i in array_movie_genres:\n","  genres += i.split('|')\n","genres_count = pd.unique(genres).tolist()\n","genres_count\n","\n","# generos_df = movie_count.Genres.str.get_dummies('|')\n","# generos = generos_df.columns.to_list()\n","# generos"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Adventure',\n"," 'Animation',\n"," 'Children',\n"," 'Comedy',\n"," 'Fantasy',\n"," 'Romance',\n"," 'Drama',\n"," 'Action',\n"," 'Crime',\n"," 'Thriller',\n"," 'Horror',\n"," 'Mystery',\n"," 'Sci-Fi',\n"," 'War',\n"," 'Musical',\n"," 'Documentary',\n"," 'IMAX',\n"," 'Western',\n"," 'Film-Noir',\n"," '(no genres listed)']"]},"metadata":{"tags":[]},"execution_count":174}]},{"cell_type":"markdown","metadata":{"id":"8Eec73bLPnIA","colab_type":"text"},"source":["# **DESAFIO 6**"]},{"cell_type":"code","metadata":{"id":"hRYl2KIMPrVi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":377},"executionInfo":{"status":"ok","timestamp":1588607869252,"user_tz":180,"elapsed":1455,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"e74a21db-f2f9-4080-aed0-e21d6db7bf9e"},"source":["from collections import Counter\n","\n","genres_counter = Counter(genres)\n","genres_counter\n","\n","# total_filmes_por_genero = movie_count.Genres.str.get_dummies().sum()\n","# total_filmes_por_genero"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Counter({'(no genres listed)': 34,\n","         'Action': 1828,\n","         'Adventure': 1263,\n","         'Animation': 611,\n","         'Children': 664,\n","         'Comedy': 3756,\n","         'Crime': 1199,\n","         'Documentary': 440,\n","         'Drama': 4361,\n","         'Fantasy': 779,\n","         'Film-Noir': 87,\n","         'Horror': 978,\n","         'IMAX': 158,\n","         'Musical': 334,\n","         'Mystery': 573,\n","         'Romance': 1596,\n","         'Sci-Fi': 980,\n","         'Thriller': 1894,\n","         'War': 382,\n","         'Western': 167})"]},"metadata":{"tags":[]},"execution_count":178}]},{"cell_type":"code","metadata":{"id":"kNQwfrU-Ubn3","colab_type":"code","colab":{}},"source":["import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5Ualt09dQyV9","colab_type":"text"},"source":["# **DESAFIO 7**"]},{"cell_type":"code","metadata":{"id":"svvD3R4xQ256","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1588607922608,"user_tz":180,"elapsed":1222,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"a7a980dc-1890-4975-b52b-d910a1667181"},"source":["plt.bar(genres_counter.keys(), genres_counter.values())\n","plt.title('Counter of Genres Movie')\n","plt.xticks(rotation='vertical')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\n"," <a list of 20 Text major ticklabel objects>)"]},"metadata":{"tags":[]},"execution_count":180},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"IDLHWb9cYkuy","colab_type":"text"},"source":["Agora que temos as médias, que tal visualizar o nosso dataframe ordenado pela nota de forma decrescente?"]},{"cell_type":"code","metadata":{"id":"MLNCjcgdaOb5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":514},"executionInfo":{"status":"ok","timestamp":1588601158388,"user_tz":180,"elapsed":1340,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"8a5743a4-8122-4037-f98e-71c45df61e59"},"source":["movies_mean.sort_values(\"RatingMean\", ascending=False).head(15)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MovieId</th>\n","      <th>Title</th>\n","      <th>Genres</th>\n","      <th>RatingMean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7656</th>\n","      <td>88448</td>\n","      <td>Paper Birds (Pájaros de papel) (2010)</td>\n","      <td>Comedy|Drama</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>8107</th>\n","      <td>100556</td>\n","      <td>Act of Killing, The (2012)</td>\n","      <td>Documentary</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9083</th>\n","      <td>143031</td>\n","      <td>Jump In! (2007)</td>\n","      <td>Comedy|Drama|Romance</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9094</th>\n","      <td>143511</td>\n","      <td>Human (2015)</td>\n","      <td>Documentary</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9096</th>\n","      <td>143559</td>\n","      <td>L.A. Slasher (2015)</td>\n","      <td>Comedy|Crime|Fantasy</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>4251</th>\n","      <td>6201</td>\n","      <td>Lady Jane (1986)</td>\n","      <td>Drama|Romance</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>8154</th>\n","      <td>102217</td>\n","      <td>Bill Hicks: Revelations (1993)</td>\n","      <td>Comedy</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>8148</th>\n","      <td>102084</td>\n","      <td>Justice League: Doom (2012)</td>\n","      <td>Action|Animation|Fantasy</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>4246</th>\n","      <td>6192</td>\n","      <td>Open Hearts (Elsker dig for evigt) (2002)</td>\n","      <td>Romance</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9122</th>\n","      <td>145994</td>\n","      <td>Formula of Love (1984)</td>\n","      <td>Comedy</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>8115</th>\n","      <td>100906</td>\n","      <td>Maniac Cop 2 (1990)</td>\n","      <td>Action|Horror|Thriller</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9129</th>\n","      <td>146662</td>\n","      <td>Dragons: Gift of the Night Fury (2011)</td>\n","      <td>Adventure|Animation|Comedy</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>8074</th>\n","      <td>99636</td>\n","      <td>English Vinglish (2012)</td>\n","      <td>Comedy|Drama</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>5785</th>\n","      <td>31522</td>\n","      <td>Marriage of Maria Braun, The (Ehe der Maria Br...</td>\n","      <td>Drama</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>9131</th>\n","      <td>146684</td>\n","      <td>Cosmic Scrat-tastrophe (2015)</td>\n","      <td>Animation|Children|Comedy</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MovieId  ... RatingMean\n","7656    88448  ...        5.0\n","8107   100556  ...        5.0\n","9083   143031  ...        5.0\n","9094   143511  ...        5.0\n","9096   143559  ...        5.0\n","4251     6201  ...        5.0\n","8154   102217  ...        5.0\n","8148   102084  ...        5.0\n","4246     6192  ...        5.0\n","9122   145994  ...        5.0\n","8115   100906  ...        5.0\n","9129   146662  ...        5.0\n","8074    99636  ...        5.0\n","5785    31522  ...        5.0\n","9131   146684  ...        5.0\n","\n","[15 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"markdown","metadata":{"id":"D4Yw8FhlhDT1","colab_type":"text"},"source":["Fizemos um tanto de análise e manipulação de dados interessante, não é?\n","\n","Mas diz a verdade, você está sentindo falta daquele gráfico que todo cientista de dados adora =D, então bora plotar nosso primeiro gráfico!\n","\n","O pandas facilita muito o plot de alguns gráficos simples, apenas selecionamos a informação que gostaríamos de visualizar e chamamos o método ```.plot()```"]},{"cell_type":"code","metadata":{"id":"usWDMMoUiG-l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1588597334192,"user_tz":180,"elapsed":29179,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"c190d583-522b-47a5-cde6-880438a171e0"},"source":["ratings.query(\"MovieId == 1\")[\"Rating\"].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5122b404e0>"]},"metadata":{"tags":[]},"execution_count":38},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"AazOm8Xeipmf","colab_type":"text"},"source":["Por padrão o método plotou um gráfico de linhas, o que não é adequado para os dados que estamos analisando.\n","\n","Precisamos mudar o tipo de gráfico para realizar uma análise mais adequada, para fazer isso apenas alteramos o parâmetro **kind** do método ```.plot```. Vamos plotar um [histograma](https://pt.wikipedia.org/wiki/Histograma) rodando a célula a seguir."]},{"cell_type":"code","metadata":{"id":"W2s2pBHck1Zt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1588597378369,"user_tz":180,"elapsed":29549,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"8e9fe8e1-db9f-49f4-b247-fb923098e687"},"source":["ratings.query(\"MovieId == 1\")[\"Rating\"].plot(kind='hist')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f51226527f0>"]},"metadata":{"tags":[]},"execution_count":39},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAX4AAAD4CAYAAADrRI2NAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAARfUlEQVR4nO3dfcxedX3H8ffHFsKDDzzddh2VFSeBERXEW9SgLoI4FAZscw6npjHE7sFtOpdoNcvURBNINtEtm7MTt/qIiCBMnLNW1Jg48C5UeTQoFm0FevvAEDQi+t0f1+m8295tr5ae67T83q/kynXO71znOt+ePz73r7/rd85JVSFJasejhi5AkjRZBr8kNcbgl6TGGPyS1BiDX5Ias3DoAsZxxBFH1NKlS4cuQ5L2KWvXrv1+VU1t3b5PBP/SpUuZmZkZugxJ2qckuXO+dod6JKkxBr8kNcbgl6TGGPyS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMfvElbuS9h5LV1w92LHXX3DmYMd+JLHHL0mN6TX4k/x1kpuT3JTko0kOSHJ0kmuTfDPJx5Ls32cNkqQt9Rb8SY4E/gqYrqonAwuA84ALgYuq6knAj4Dz+6pBkrStvod6FgIHJlkIHATcBZwKXNZtXwWc23MNkqQ5egv+qtoI/D3wHUaB/7/AWuDeqnqo+9gG4Mj59k+yPMlMkpnZ2dm+ypSk5vQ51HMocA5wNPDrwMHAGePuX1Urq2q6qqanprZ5joAkaTf1OdTzAuDbVTVbVT8HLgdOAQ7phn4AlgAbe6xBkrSVPoP/O8CzkhyUJMBpwC3ANcBLus8sA67ssQZJ0lb6HOO/ltGPuNcDN3bHWgm8EXh9km8ChwMX91WDJGlbvV65W1VvAd6yVfMdwMl9HleStH1euStJjTH4JakxBr8kNcbgl6TGGPyS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMQa/JDXG4Jekxhj8ktQYg1+SGmPwS1JjDH5JakyfD1s/Nsm6Oa/7krwuyWFJVie5vXs/tK8aJEnb6vPRi9+oqhOr6kTg6cBPgCuAFcCaqjoGWNOtS5ImZFJDPacB36qqO4FzgFVd+yrg3AnVIElicsF/HvDRbnlRVd3VLd8NLJpvhyTLk8wkmZmdnZ1EjZLUhN6DP8n+wNnAx7feVlUF1Hz7VdXKqpququmpqameq5Skdkyix/8i4PqquqdbvyfJYoDufdMEapAkdSYR/C/jV8M8AFcBy7rlZcCVE6hBktTpNfiTHAycDlw+p/kC4PQktwMv6NYlSROysM8vr6oHgMO3avsBo1k+kqQBeOWuJDXG4Jekxhj8ktQYg1+SGmPwS1JjDH5JaozBL0mNMfglqTEGvyQ1xuCXpMYY/JLUGINfkhpj8EtSYwx+SWqMwS9JjTH4JakxfT+B65AklyW5LcmtSZ6d5LAkq5Pc3r0f2mcNkqQt9d3jfzfwmao6DjgBuBVYAaypqmOANd26JGlCegv+JI8DngdcDFBVD1bVvcA5wKruY6uAc/uqQZK0rT57/EcDs8C/J7khyfu6h68vqqq7us/cDSyab+cky5PMJJmZnZ3tsUxJakufwb8QOAl4T1U9DXiArYZ1qqqAmm/nqlpZVdNVNT01NdVjmZLUlj6DfwOwoaqu7dYvY/SH4J4kiwG690091iBJ2kpvwV9VdwPfTXJs13QacAtwFbCsa1sGXNlXDZKkbS3s+fv/Evhwkv2BO4BXMfpjc2mS84E7gZf2XIMkaY5eg7+q1gHT82w6rc/jSpK2zyt3JakxBr8kNcbgl6TGGPyS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMQa/JDXG4Jekxhj8ktQYg1+SGmPwS1Jjxgr+JE/puxBJ0mSM2+P/lyTXJfnzJI/rtSJJUq/GCv6qei7wcuAJwNokH0ly+s72S7I+yY1J1iWZ6doOS7I6ye3d+6EP618gSdolY4/xV9XtwN8CbwR+G/jHJLcl+f2d7Pr8qjqxqjY/iWsFsKaqjgHWdOuSpAkZd4z/qUkuAm4FTgV+t6p+q1u+aBePeQ6wqlteBZy7i/tLkh6GcXv8/wRcD5xQVa+pqusBqup7jP4XsD0FfDbJ2iTLu7ZFVXVXt3w3sGg36pYk7aZxH7Z+JvDTqvoFQJJHAQdU1U+q6oM72O85VbUxyeOB1Ulum7uxqipJzbdj94diOcBRRx01ZpmSpJ0Zt8f/OeDAOesHdW07VFUbu/dNwBXAycA9SRYDdO+btrPvyqqarqrpqampMcuUJO3MuMF/QFXdv3mlWz5oRzskOTjJYzYvAy8EbgKuApZ1H1sGXLmrRUuSdt+4Qz0PJDlp89h+kqcDP93JPouAK5JsPs5HquozSb4KXJrkfOBO4KW7V7okaXeMG/yvAz6e5HtAgF8D/mhHO1TVHcAJ87T/ADhtF+uUJO0hYwV/VX01yXHAsV3TN6rq5/2VJUnqy7g9foBnAEu7fU5KQlV9oJeqJEm9GSv4k3wQ+E1gHfCLrrkAg1/SI97SFVcPctz1F5zZy/eO2+OfBo6vqnnn3EuS9h3jTue8idEPupKkfdy4Pf4jgFuSXAf8bHNjVZ3dS1WSpN6MG/xv7bMISdLkjDud84tJfgM4pqo+l+QgYEG/pUmS+jDubZlfDVwGvLdrOhL4ZF9FSZL6M+6Pu68BTgHug/9/KMvj+ypKktSfcYP/Z1X14OaVJAsZzeOXJO1jxg3+LyZ5M3Bg96zdjwP/2V9ZkqS+jBv8K4BZ4EbgT4BPs+Mnb0mS9lLjzur5JfBv3UuStA8b914932aeMf2qeuIer0iS1KtduVfPZgcAfwgctufLkST1bawx/qr6wZzXxqp6F6MHsEuS9jHjDvWcNGf1UYz+BzDuvguAGWBjVZ2V5GjgEuBwYC3wyrlTRSVJ/Rp3qOcf5iw/BKxn/Gflvha4FXhst34hcFFVXZLkX4HzgfeM+V2SpIdp3Fk9z9+dL0+yhNGQ0DuA12f05PVTgT/uPrKK0Q3gDH5JmpBxh2tev6PtVfXO7Wx6F/AG4DHd+uHAvVX1ULe+gdF9f+Y75nJgOcBRRx01TpmSpDGMewHXNPBnjEL6SOBPgZMYBfpj5tshyVnApqpauzuFVdXKqpququmpqand+QpJ0jzGHeNfApxUVT8GSPJW4OqqesUO9jkFODvJixlNAX0s8G7gkCQLu17/EmDj7hYvSdp14/b4FwFzZ9482LVtV1W9qaqWVNVS4Dzg81X1cuAa4CXdx5YBV+5SxZKkh2XcHv8HgOuSXNGtn8voh9nd8UbgkiRvB24ALt7N75Ek7YZxZ/W8I8l/Ac/tml5VVTeMe5Cq+gLwhW75DuDkXStTkrSnjDvUA3AQcF9VvRvY0F2IJUnax4z76MW3MBqieVPXtB/wob6KkiT1Z9we/+8BZwMPAFTV99jONE5J0t5t3OB/sKqK7tbMSQ7uryRJUp/GDf5Lk7yX0Rz8VwOfw4eySNI+aaezerr763wMOA64DzgW+LuqWt1zbZKkHuw0+Kuqkny6qp4CGPaStI8bd6jn+iTP6LUSSdJEjHvl7jOBVyRZz2hmTxj9Z+CpfRUmSerHDoM/yVFV9R3gdyZUj7RPWbri6sGOvf4Cn36q3bOzHv8nGd2V884kn6iqP5hEUZKk/uxsjD9zlp/YZyGSpMnYWfDXdpYlSfuonQ31nJDkPkY9/wO7ZfjVj7uP3f6ukqS90Q6Dv6oWTKoQSdJk7MptmSVJjwC9BX+SA5Jcl+RrSW5O8rau/egk1yb5ZpKPJdm/rxokSdvqs8f/M+DUqjoBOBE4I8mzgAuBi6rqScCPgPN7rEGStJXegr9G7u9W9+teBZwKXNa1r2L0/F5J0oT0OsafZEGSdcAmRjd4+xZwb1U91H1kA3DkdvZdnmQmyczs7GyfZUpSU3oN/qr6RVWdCCxh9ID143Zh35VVNV1V01NTU73VKEmtmcisnqq6F7gGeDajh7lsnka6BNg4iRokSSN9zuqZSnJIt3wgcDpwK6M/AC/pPrYMuLKvGiRJ2xr3tsy7YzGwKskCRn9gLq2qTyW5BbgkyduBG4CLe6xBkrSV3oK/qr4OPG2e9jsYjfdLkgbglbuS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMQa/JDXG4Jekxhj8ktQYg1+SGmPwS1JjDH5JaozBL0mNMfglqTEGvyQ1xuCXpMb0+ejFJyS5JsktSW5O8tqu/bAkq5Pc3r0f2lcNkqRt9dnjfwj4m6o6HngW8JokxwMrgDVVdQywpluXJE1Ib8FfVXdV1fXd8o8ZPWj9SOAcYFX3sVXAuX3VIEna1kTG+JMsZfT83WuBRVV1V7fpbmDRdvZZnmQmyczs7OwkypSkJvQe/EkeDXwCeF1V3Td3W1UVUPPtV1Urq2q6qqanpqb6LlOSmtFr8CfZj1Hof7iqLu+a70myuNu+GNjUZw2SpC31OasnwMXArVX1zjmbrgKWdcvLgCv7qkGStK2FPX73KcArgRuTrOva3gxcAFya5HzgTuClPdYgSdpKb8FfVV8Gsp3Np/V1XKkVS1dcPXQJE9fiv7kPXrkrSY0x+CWpMQa/JDXG4Jekxhj8ktQYg1+SGmPwS1JjDH5JaozBL0mNMfglqTEGvyQ1xuCXpMYY/JLUGINfkhpj8EtSYwx+SWpMn49efH+STUlumtN2WJLVSW7v3g/t6/iSpPn12eP/D+CMrdpWAGuq6hhgTbcuSZqg3oK/qr4E/HCr5nOAVd3yKuDcvo4vSZrfpMf4F1XVXd3y3cCiCR9fkpo32I+7VVVAbW97kuVJZpLMzM7OTrAySXpkm3Tw35NkMUD3vml7H6yqlVU1XVXTU1NTEytQkh7pJh38VwHLuuVlwJUTPr4kNa/P6ZwfBb4CHJtkQ5LzgQuA05PcDrygW5ckTdDCvr64ql62nU2n9XVMSdLO9Rb80iQtXXH10CVI+wxv2SBJjTH4JakxBr8kNcbgl6TG+OOu9hh/YJX2Dfb4JakxBr8kNcbgl6TGGPyS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMQa/JDXG4Jekxgxyr54kZwDvBhYA76uq3h7BONT9Y9ZfcOYgxwXvmSNpxybe40+yAPhn4EXA8cDLkhw/6TokqVVDDPWcDHyzqu6oqgeBS4BzBqhDkpo0xFDPkcB356xvAJ659YeSLAeWd6v3J/nGBGrbY3LhNk1HAN+ffCV7Jc/FljwfW/J8dHLhwz4XvzFf4157P/6qWgmsHLqOPSXJTFVND13H3sBzsSXPx5Y8H7/S17kYYqhnI/CEOetLujZJ0gQMEfxfBY5JcnSS/YHzgKsGqEOSmjTxoZ6qeijJXwD/zWg65/ur6uZJ1zGAR8yw1R7gudiS52NLno9f6eVcpKr6+F5J0l7KK3clqTEGvyQ1xuDvWZL3J9mU5KahaxlakickuSbJLUluTvLaoWsaUpIDklyX5Gvd+Xjb0DUNLcmCJDck+dTQtQwtyfokNyZZl2Rmj363Y/z9SvI84H7gA1X15KHrGVKSxcDiqro+yWOAtcC5VXXLwKUNIkmAg6vq/iT7AV8GXltV/zNwaYNJ8npgGnhsVZ01dD1DSrIemK6qPX4xmz3+nlXVl4AfDl3H3qCq7qqq67vlHwO3MrqSu0k1cn+3ul/3arYnlmQJcCbwvqFreaQz+DWIJEuBpwHXDlvJsLqhjXXAJmB1VbV8Pt4FvAH45dCF7CUK+GyStd0tbPYYg18Tl+TRwCeA11XVfUPXM6Sq+kVVncjoCvaTkzQ5HJjkLGBTVa0dupa9yHOq6iRGdzJ+TTdsvEcY/Jqobiz7E8CHq+ryoevZW1TVvcA1wBlD1zKQU4Czu3HtS4BTk3xo2JKGVVUbu/dNwBWM7my8Rxj8mpjux8yLgVur6p1D1zO0JFNJDumWDwROB24btqphVNWbqmpJVS1ldBuXz1fVKwYuazBJDu4mQJDkYOCFwB6bGWjw9yzJR4GvAMcm2ZDk/KFrGtApwCsZ9ebWda8XD13UgBYD1yT5OqN7WK2uquanMQqARcCXk3wNuA64uqo+s6e+3OmcktQYe/yS1BiDX5IaY/BLUmMMfklqjMEvSY0x+CWpMQa/JDXm/wBTSJGrdpHw/AAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"oYEI1fBOlEdk","colab_type":"text"},"source":["Legal, agora temos uma visualização muito mais agradavel de analisar. Compare com o gráfico de linhas, qual você acha melhor para análise? \n","\n","P.S: Deixar de usar o gráfico de linhas, não significa que sejá uma visualização ruim. Apenas quer dizer que nossos dados não tem características ideias para serem visualizados como um *line plot*, agora pense em uma [série temporal](https://pt.wikipedia.org/wiki/S%C3%A9rie_temporal). **Você acha que o gráfico de linhas ainda seria uma má ideia?**\n","\n","Antes de analisar o histograms de outros filmes, quero colocar um título na imagem. Vamos ver como podemos fazer isso!\n"]},{"cell_type":"code","metadata":{"id":"C8KHmAMbmPJA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1588597386062,"user_tz":180,"elapsed":37107,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"df118f40-251a-4fd7-fe23-f92f1119fb2d"},"source":["ratings.query(\"MovieId == 1\")[\"Rating\"].plot(kind='hist',\n","                                              title=\"Rating of Toy Story movie\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f51225d2588>"]},"metadata":{"tags":[]},"execution_count":40},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"yY9xg7-KnFpb","colab_type":"text"},"source":["Claro que python tem outras ferramentas muito poderosas para manipular gráficos, uma delas é o [matplotlib](https://matplotlib.org/).\n","\n","Que tal experimentar um pouquinho esta poderosa ferramenta? \n","\n","Vamos importar a lib e adicionar título no gráfico usando o matplotlib, veja como fica na célula a seguir."]},{"cell_type":"code","metadata":{"id":"kSJBUpCmamqK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":281},"executionInfo":{"status":"ok","timestamp":1588597386065,"user_tz":180,"elapsed":37018,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"82bc002c-7dfe-4cf5-ebeb-dc5099f56dab"},"source":["ratings.query(\"MovieId == 1\")[\"Rating\"].plot(kind='hist')\n","plt.title(\"Rating of Toy Story movie\")\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"pagvE8ntpfzv","colab_type":"text"},"source":["Agora que aprendemos a criar um histograma e manipular os gráficos, vamos plotar informações de outros filmes e realizar uma análise desses gráficos?\n","\n","Vamos plotar o histograma do filme Jumanji e da animação Liga da justiça: Doom."]},{"cell_type":"code","metadata":{"id":"vEJ5uiDpdKzC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1588597386066,"user_tz":180,"elapsed":36968,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"b675f562-37c4-4b09-f581-83b2bf25d462"},"source":["ratings.query(\"MovieId == 2\")[\"Rating\"].plot(kind='hist',\n","                                              title=\"Rating Toy Jumanji movie\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f51225dcbe0>"]},"metadata":{"tags":[]},"execution_count":42},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"3qI60nGXdt3W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1588597386083,"user_tz":180,"elapsed":36038,"user":{"displayName":"rafael oliveira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiRWgQm7PHqzjoWKuIclyrb72ut2bd381DYMOdoUw=s64","userId":"15537982947923918070"}},"outputId":"f47c9f52-2678-4011-dcaf-e0c6087e6751"},"source":["ratings.query(\"MovieId == 102084\")[\"Rating\"].plot(kind='hist',\n","                                                   title=\"Rating Justice League: Doom movie\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f51224bf4a8>"]},"metadata":{"tags":[]},"execution_count":43},{"output_type":"display_data","data":{"image/png":"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a3thW7tNgU8APxpd6RERMRZGGiNQy+PXj3LdewCLbC+2/SwwB5g1SLu/Ac4AfjvK9UdExBgYKQg8xONOTAKWtkwvq+f9nqTdgCm2rxtuRZKOk7RA0oKVK1eOsoyIiBjOSF1Db5T0BNWZwSvrx7B6sHizNd2wpPWALwJHj9TW9vnA+QAzZ84cbSBFRMQwhg0C2+NexrqXA1NapifX8wZsCuwE/Fv1mTW2AuZKOiQDxhER3TOa21CP1nxghqRtJG0AHM7q7zzG9uO2J9iebns6cCuQEIiI6LLGgsD2KmA2cANwH3CF7XslnSbpkKa2GxERo9PpB8rWiO15wLy2eacM0XafJmuJiIjBNdk1FBERfSBBEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYVrNAgk7S/pfkmLJJ0wyPJPSVoo6W5J/yppWpP1RETESzUWBJLGAWcDBwA7AkdI2rGt2R3ATNu7AFcBf9dUPRERMbgmzwj2ABbZXmz7WWAOMKu1ge3v2X66nrwVmNxgPRERMYgmg2ASsLRlelk9byjHANcPtkDScZIWSFqwcuXKMSwxIiLWisFiSUcBM4G/H2y57fNtz7Q9c+LEid0tLiJiHTe+wXUvB6a0TE+u572IpLcDnwX2tv27BuuJiIhBNHlGMB+YIWkbSRsAhwNzWxtI2hU4DzjE9kMN1hIREUNoLAhsrwJmAzcA9wFX2L5X0mmSDqmb/T2wCXClpDslzR1idRER0ZAmu4awPQ+Y1zbvlJbHb29y+xERMbK1YrA4IiJ6J0EQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQULkEQEVG4BEFEROESBBERhUsQREQUrtEgkLS/pPslLZJ0wiDLXyHp8nr5jyRNb7KeiIh4qcaCQNI44GzgAGBH4AhJO7Y1OwZ41PYbgC8BZzRVT0REDK7JM4I9gEW2F9t+FpgDzGprMwv4Rv34KmBfSWqwpoiIaDO+wXVPApa2TC8D9hyqje1Vkh4HXg083NpI0nHAcfXkU5Lub6TiZk2gbb8KUNo+92x/1btz6dL+j6F/93naUAuaDIIxY/t84Pxe1/FySFpge2av6+im0va5tP2F7PO6osmuoeXAlJbpyfW8QdtIGg9sDjzSYE0REdGmySCYD8yQtI2kDYDDgbltbeYCH64fHwp817YbrCkiIto01jVU9/nPBm4AxgFft32vpNOABbbnAv8EXCxpEfBrqrBYV/V119YaKm2fS9tfyD6vE5Q34BERZcsniyMiCpcgiIgoXIJgjEkaJ+kOSd8aYvlhkhZKulfSpd2urwnD7bOkqZK+Vy+/W9KBvahxLElaIukeSXdKWjDIckn6Sn3rlLsl7daLOsdSB/t8ZL2v90i6RdIbe1HnWBppn1va7S5plaRDu1nfWOqLzxH0mU8A9wGbtS+QNAM4EdjL9qOSXtPt4hoy5D4DJwNX2P5qfYuRecD0LtbWlLfaHupDRQcAM+qfPYGv8tIPU/aj4fb5AWDv+vf6AKoB1XV9nwdupXMGcGP3Shp7OSMYQ5ImA+8CLhiiybHA2bYfBbD9ULdqa0oH+2xWB8TmwIpu1NVjs4CLXLkV2ELS63pdVJNs3zLwew3cSvW5oRJ8HLga6Ou/5QTB2DoL+N/AC0Ms3xbYVtIPJN0qaf/uldaYkfb5VOAoScuozgY+3qW6mmTgRkm317c/aTfY7VUmdaWy5oy0z62OAa7vQk1NG3afJU0C3kN1xtfX0jU0RiQdBDxk+3ZJ+wzRbDxVd8E+VO+Ybpa0s+3HulPl2Opwn48ALrR9pqQ/pvrcyE62hwqOfvBm28vrrr2bJP2X7Zt7XVTDOtpnSW+lCoI3d73CsTfSPp8FHG/7hX6/V2bOCMbOXsAhkpZQ3Wn1bZIuaWuzDJhr+znbDwA/oQqGftXJPh8DXAFg+4fAhlQ37epbtpfX/z4EXEN1p91Wndxepa90sM9I2oWqi3CW7b6/VUwH+zwTmFP//h8KnCPp3V0tcowkCMaI7RNtT7Y9neoT0t+1fVRbs2upzgaQNIGqq2hxN+scSx3u88+BfQEk7UAVBCu7WugYkrSxpE0HHgP7AT9uazYX+FB99dCbgMdt/6LLpY6ZTvZZ0lTgX4AP2v5J96scW53ss+1tbE+vf/+vAv7c9rVdL3YMpGuoYW231LgB2E/SQuB54DPrwjundm37/Gnga5L+kqrP9eg+v5/Ua4Fr6q6A8cCltr8t6WMAts+lGgs5EFgEPA18pEe1jpVO9vkUqlvIn1O3W9Xnd+jsZJ/XGbnFRERE4dI1FBFRuARBREThEgQREYVLEEREFC5BEBFRuARBREThEgQREYX7b9UmzyCcd+RiAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"wQ1VGLaFqI7z","colab_type":"text"},"source":["Agora que temos os gráficos, chegou a hora de analisar.\n","\n","A primeira coisa que preciso saber é o que cada eixo do meu gráfico significa. Então, eixo **x** mostra a nota, enquanto eixo **y** a frequência das notas (quantas vezes determinada nota foi dada). \n","\n","Entendido nosso gráfico, vamos contextualizar o cenário que estamos analisando:\n","\n"," - Temos 3 filmes, dois muito populares (Toy story e Jumanji) e outro que nenhuma pessoa presente no momento da aula conhecia (animação da liga da justiça). O ponto que chamou a atenção, foi que a animação tinha média de nota maior que dois filmes, aparentemente mais popular, Jumaji e Toy Story. **Será que a animação é um filme tão bom assim?**\n","\n","\n","Dado esse cenário a primeira coisa que me chama a atenção é a animação da liga da justiça ter média de nota igual a 5. Ao analisar o histograma do respectivo filme, verificamos que ele só teve uma avaliação igual a 5, logo, fica evidente que a **quantidade de votos é um aspecto importante na avaliação das médias**. Com apenas uma avaliação, não conseguimos garantir que o filme é realmente bom, tornando a avaliação muito \"volátil\". Imagina que Liga da Justiça receba mais uma avaliação, com nota 0, assim a média seria 2.5. Apenas com mais essa avaliação o filme passaria a ser considerada um \"pior\" que Jumanji e Toy Story.\n","\n","Outro ponto interessante é comparar o histograma de Toy Story e Jumanji, ambos tem médias \"relativamente próximas\". Mas repare que a distribuição de notas são diferentes, Toy Story recebe mais notas 5 e 4 que qualquer outra nota, enquanto Jumanji recebe mais notas 4 e 3, assim concluímos que a **distribuição das notas também é um fator importante na avaliação das médias**.(Se ficar alguma dúvida sobre esse tema reveja o exemplo que o instrutor apresenta no final na aula) \n","\n","\n","Com isso nós fechamos a nossa primeira aula do **#quarentenadados**, viu quanta coisa aprendemos? Que tal colocar isso em prática?\n","\n","\n","**Crie seu próprio notebook, reproduza nossa aula e resolva os desafios que deixamos para vocês**.\n","\n","\n","Até a próxima aula!\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"iJ0nFiyXZu8M","colab_type":"text"},"source":["## Desafio 1 do [Paulo Silveira](https://twitter.com/paulo_caelum)\n","\n","O Paulo fez uma análise rápida e disse que tem 18 filmes sem avaliações, será que ele acertou?\n","\n","Determine quantos filmes não tem avaliações e quais são esses filmes.\n"]},{"cell_type":"code","metadata":{"id":"noZxoTjp7_DX","colab_type":"code","colab":{}},"source":["movies_without_rating = pd.merge(movies, rating_mean_movie, on='MovieId', how='left', indicator=True).query(\"_merge == 'left_only'\").drop('_merge',1)\n","movies_without_rating"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3e8LMGJAaiXJ","colab_type":"text"},"source":["## Desafio 2 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)\n","\n","Mudar o nome da coluna nota do dataframe **filmes_com_media** para nota_média após o join."]},{"cell_type":"code","metadata":{"id":"wwfXX5Ig8bv6","colab_type":"code","colab":{}},"source":["movies_mean.columns = ['MovieId', 'Title', 'Genres', 'RatingMean']\n","movies_mean"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cXqu2wt0a2l6","colab_type":"text"},"source":["## Desafio 3 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)\n","\n","Colocar o número de avaliações por filme, isto é, não só a média mas o TOTAL de votos por filme."]},{"cell_type":"code","metadata":{"id":"4n1prBl1AP1U","colab_type":"code","colab":{}},"source":["rating_count_movie = ratings.groupby('MovieId')['Rating'].count()\n","movie_count = movies_mean.join(rating_count_movie, on = 'MovieId')\n","movie_count.columns = ['MovieId', 'Title', 'Genres', 'RatingMean', 'RatingCount']\n","movie_count"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fZ5F6qwVeVWt","colab_type":"text"},"source":["## Desafio 4 do [Thiago Gonçalves](https://twitter.com/tgcsantos)\n","\n","\n","Arredondar as médias (coluna de nota média) para duas casas decimais."]},{"cell_type":"code","metadata":{"id":"v21QvSgkAOcN","colab_type":"code","colab":{}},"source":["movie_count.round(2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mYzG73cSeigN","colab_type":"text"},"source":["## Desafio 5 do [Allan Spadini](https://twitter.com/allanspadini)\n","\n","Descobrir os generos dos filmes (quais são eles, únicos). (esse aqui o bicho pega)"]},{"cell_type":"code","metadata":{"id":"3j5mci6JARrV","colab_type":"code","colab":{}},"source":["array_movie_genres = movie_count['Genres'].to_numpy()\n","genres = []\n","for i in array_movie_genres:\n","  genres += i.split('|')\n","genres_count = pd.unique(genres).tolist()\n","genres_count"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"enM3lF2textZ","colab_type":"text"},"source":["## Desafio 6 da [Thais André](https://twitter.com/thais_tandre)\n","\n","Contar o número de aparições de cada genero."]},{"cell_type":"code","metadata":{"id":"ahztatJ6ATZL","colab_type":"code","colab":{}},"source":["from collections import Counter\n","\n","genres_counter = Counter(genres)\n","genres_counter"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SVVAZGGdfA_s","colab_type":"text"},"source":["## Desafio 7 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)\n","\n","Plotar o gráfico de aparições de cada genero. Pode ser um gráfico de tipo igual a barra."]},{"cell_type":"code","metadata":{"id":"BEPjLRaGAUP3","colab_type":"code","colab":{}},"source":["plt.bar(genres_counter.keys(), genres_counter.values())\n","plt.title('Counter of Genres Movie')\n","plt.xticks(rotation='vertical')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5uIsDpkAz8oa","colab_type":"text"},"source":["#Não esqueça de compartilhar a solução dos seus desafios com nossos instrutores, seja no twitter ou linkedin. Boa sorte!"]},{"cell_type":"code","metadata":{"id":"VzeE2YYNVBxx","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}